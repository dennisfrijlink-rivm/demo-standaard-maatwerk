import{x as p}from"./figure-loader-CJ93ISYx.js";import{H as o}from"./base-chart-B_j4OqMu.js";import{d as l}from"./date-string-to-timestamp-9GA88BEB.js";import"./base-D-To3aZf.js";import"./base-figure-u1I5xRLa.js";function x(t,e){var r,s,a,n,h;return{chart:{type:"line",width:t.width==="100%"?null:parseInt(t.width,10),height:parseInt(t.height,10)||400},legend:{enabled:e.length>1},xAxis:{type:(r=t.xAxis)==null?void 0:r.type,title:{text:((s=t.xAxis)==null?void 0:s.title)||""},plotBands:((n=(a=t.xAxis)==null?void 0:a.plotbands)==null?void 0:n.map(i=>({from:l(i.from),to:l(i.to),color:"rgba(200, 200, 200, 0.2)",label:{text:i.label,style:{fontSize:"14px",color:"#007bc7"}}})))||[]},yAxis:{title:{text:((h=t["y-axis"])==null?void 0:h.title)||""}},series:e||[]}}class u extends o{async getChartOptions(){const{series:e}=await this.getSeriesData(),r=x(this.options,e);return this.mergeOptions(await super.getChartOptions(),r)}render(){return p` ${super.render()}`}}export{u as HighchartsLine};
